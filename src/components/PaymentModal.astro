---
interface Props {
  courseTitle: string;
  coursePrice: string;
}

const { courseTitle, coursePrice } = Astro.props;
---

<div id="paymentModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-2xl p-8 max-w-4xl w-full mx-4 max-h-screen overflow-y-auto">
    <!-- Header -->
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-bold text-[#2A6F97]">Información de Pago</h2>
      <button id="closeModal" class="text-gray-500 hover:text-gray-700 text-2xl">
        &times;
      </button>
    </div>

    <!-- Course Info -->
    <div class="bg-[#f6fbfd] rounded-lg p-4 mb-6">
      <h3 class="font-semibold text-[#2A6F97] mb-2" id="modalCourseTitle">{courseTitle}</h3>
      <p class="text-[#4B8BBE] font-bold text-lg" id="modalCoursePrice">{coursePrice}</p>
    </div>

    <!-- Main Content - Side by Side Layout -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Left Column - Payment Methods -->
      <div class="space-y-4">
        <h4 class="text-lg font-semibold text-[#2A6F97]">Métodos de Pago:</h4>
        
        <!-- Pago Móvil -->
        <div class="border border-[#eaf6fb] rounded-lg p-4">
          <h5 class="font-semibold text-[#2A6F97] mb-3 flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"/>
            </svg>
            Pago Móvil (Venezuela)
          </h5>
          <div class="space-y-2 text-sm text-gray-700">
            <p><strong>Banco:</strong> Banesco</p>
            <p><strong>Teléfono:</strong> 0414-123-4567</p>
            <p><strong>Cédula:</strong> V-12.345.678</p>
            <p><strong>Titular:</strong> Tecnocoins C.A.</p>
          </div>
        </div>

        <!-- Binance -->
        <div class="border border-[#eaf6fb] rounded-lg p-4">
          <h5 class="font-semibold text-[#2A6F97] mb-3 flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2L8.5 5.5L12 9L15.5 5.5L12 2ZM2 12L5.5 8.5L9 12L5.5 15.5L2 12ZM15 12L18.5 8.5L22 12L18.5 15.5L15 12ZM12 15L8.5 18.5L12 22L15.5 18.5L12 15Z"/>
            </svg>
            Binance (USDT)
          </h5>
          <div class="space-y-2 text-sm text-gray-700">
            <p><strong>ID de Binance:</strong> 123456789</p>
            <p><strong>Email:</strong> pagos@tecnocoins.com</p>
            <p><strong>Red:</strong> TRC20 (Tron)</p>
          </div>
          <button class="mt-3 bg-[#F3BA2F] text-black font-semibold py-2 px-4 rounded-lg hover:bg-[#d4a228] transition w-full">
            Pagar con Binance
          </button>
        </div>
      </div>

      <!-- Right Column - Upload Payment Proof -->
      <div>
        <h4 class="text-lg font-semibold text-[#2A6F97] mb-4">Enviar Comprobante de Pago</h4>
        <form id="paymentProofForm" class="space-y-4">
          <div>
            <label for="userEmail" class="block text-sm font-medium text-gray-700 mb-2">
              Tu Email *
            </label>
            <input 
              type="email" 
              id="userEmail" 
              name="userEmail" 
              required 
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#4B8BBE] focus:border-transparent"
              placeholder="tu.email@ejemplo.com"
            >
          </div>
          
          <div>
            <label for="paymentProof" class="block text-sm font-medium text-gray-700 mb-2">
              Comprobante de Pago *
            </label>
            <input 
              type="file" 
              id="paymentProof" 
              name="paymentProof" 
              accept="image/*" 
              required 
              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#4B8BBE] focus:border-transparent"
            >
            <p class="text-xs text-gray-500 mt-1">Formatos aceptados: JPG, PNG, PDF (Max: 5MB)</p>
          </div>

          <button 
            type="submit" 
            class="w-full bg-[#2A6F97] text-white font-bold py-3 px-6 rounded-lg hover:bg-[#1e4e6c] transition"
          >
            Enviar Comprobante
          </button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  function initPaymentModal() {
    const modal = document.getElementById('paymentModal');
    const closeButton = document.getElementById('closeModal');
    const form = document.getElementById('paymentProofForm');

    // Close modal handlers
    closeButton?.addEventListener('click', () => {
      modal?.classList.add('hidden');
    });

    // Close modal when clicking outside
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });

    // Form submission handler
    form?.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const emailInput = document.getElementById('userEmail') as HTMLInputElement;
      const fileInput = document.getElementById('paymentProof') as HTMLInputElement;
      
      if (emailInput?.value && fileInput?.files?.[0]) {
        alert('¡Comprobante enviado exitosamente! Te contactaremos pronto.');
        modal?.classList.add('hidden');
        form.reset();
      }
    });

    // Add event listeners to course buttons
    document.querySelectorAll('[data-course-button]').forEach(button => {
      button.addEventListener('click', () => {
        const courseTitle = button.getAttribute('data-course-title') || '';
        const coursePrice = button.getAttribute('data-course-price') || '';
        
        // Update modal content
        const titleElement = document.getElementById('modalCourseTitle');
        const priceElement = document.getElementById('modalCoursePrice');
        
        if (titleElement) titleElement.textContent = courseTitle;
        if (priceElement) priceElement.textContent = coursePrice;
        
        // Show modal
        modal?.classList.remove('hidden');
      });
    });
  }

  // Initialize when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPaymentModal);
  } else {
    initPaymentModal();
  }

  // Re-initialize when navigating (for Astro transitions)
  document.addEventListener('astro:page-load', initPaymentModal);
</script>